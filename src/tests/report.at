# Checking the satyr. -*- Autotest -*-

AT_BANNER([Report])

## ------------------------ ##
## sr_report_type_to_string ##
## ------------------------ ##

AT_TESTFUN([sr_report_type_to_string],
[[
#include <assert.h>
#include "report_type.h"

void check(enum sr_report_type type, char *str)
{
  assert(0 == sr_strcmp0(sr_report_type_to_string(type), str));
}

int main(void)
{
  check(SR_REPORT_INVALID, "invalid");
  check(SR_REPORT_CORE, "core");
  check(SR_REPORT_KERNELOOPS, "kerneloops");
  check(SR_REPORT_GDB, "gdb");
  check(SR_REPORT_NUM, "invalid");
  check(5000, "invalid");
  check(-42, "invalid");

  return 0;
}
]])

## -------------------------- ##
## sr_report_type_from_string ##
## -------------------------- ##

AT_TESTFUN([sr_report_type_from_string],
[[
#include <assert.h>
#include <stdio.h>
#include "report_type.h"

void check(enum sr_report_type type, char *str)
{
  assert(sr_report_type_from_string(str) == type);
}

int main(void)
{
  check(SR_REPORT_INVALID, "invalid");
  check(SR_REPORT_CORE, "core");
  check(SR_REPORT_PYTHON, "python");
  check(SR_REPORT_GDB, "gdb");
  check(SR_REPORT_INVALID, NULL);
  check(SR_REPORT_INVALID, "visual basic");

  return 0;
}
]])
