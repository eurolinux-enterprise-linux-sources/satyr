# Checking the satyr. -*- Autotest -*-

AT_BANNER([Operating system])

## -------------------------------------------- ##
## sr_operating_system_parse_etc_system_release ##
## -------------------------------------------- ##
AT_TESTFUN([sr_operating_system_parse_etc_system_release],
[[
#include "operating_system.h"
#include "utils.h"
#include <stdio.h>
#include <assert.h>

void check(const char *etc_system_release,
           const char *expected_name,
           const char *expected_version)
{
    printf("Testing %s.\n", etc_system_release);
    char *name, *version;
    bool success = sr_operating_system_parse_etc_system_release(
        etc_system_release,
        &name,
        &version);

    assert(success);
    assert(0 == strcmp(name, expected_name));
    assert(0 == strcmp(version, expected_version));
    free(name);
    free(version);
}

int
main(void)
{
    check("Fedora release 16 (Verne)", "fedora", "16");
    check("Red Hat Enterprise Linux release 6.2", "rhel", "6.2");
    check("CentOS release 6.5 (Final) ", "centos", "6.5");
    return 0;
}
]])

## ---------------------------------------- ##
## sr_operating_system_parse_etc_os_release ##
##----------------------------------------- ##
AT_TESTFUN([sr_operating_system_parse_etc_os_release],
[[
#include "operating_system.h"
#include "utils.h"
#include <stdio.h>
#include <assert.h>

void check(const char *etc_os_release,
           const char *expected_name,
           const char *expected_version)
{
    struct sr_operating_system *os = sr_operating_system_new();
    bool success = sr_operating_system_parse_etc_os_release(
        etc_os_release, os);

    assert(success);
    assert(0 == strcmp(os->name, expected_name));
    assert(0 == strcmp(os->version, expected_version));
    sr_operating_system_free(os);
}

int
main(void)
{
    char *f19 =
"NAME=Fedora\n"
"VERSION=\"19 (Schrödinger’s Cat)\"\n"
"ID=fedora\n"
"VERSION_ID=19\n"
"PRETTY_NAME=\"Fedora 19 (Schrödinger’s Cat)\"\n"
"ANSI_COLOR=\"0;34\"\n"
"CPE_NAME=\"cpe:/o:fedoraproject:fedora:19\"\n";

    char *raw =
"NAME=Fedora\n"
"VERSION=\"20 (Rawhide)\"\n"
"ID=fedora\n"
"VERSION_ID=20\n"
"PRETTY_NAME=\"Fedora 20 (Rawhide)\"\n"
"ANSI_COLOR=\"0;34\"\n"
"CPE_NAME=\"cpe:/o:fedoraproject:fedora:20\"\n"
"REDHAT_BUGZILLA_PRODUCT=\"Fedora\"\n"
"REDHAT_BUGZILLA_PRODUCT_VERSION=Rawhide\n"
"REDHAT_SUPPORT_PRODUCT=\"Fedora\"\n"
"REDHAT_SUPPORT_PRODUCT_VERSION=Rawhide\n";

    char *el7 =
"NAME=\"Red Hat Enterprise Linux Workstation\"\n"
"VERSION=\"7.0 (Codename)\"\n"
"ID=\"rhel\"\n"
"VERSION_ID=\"7.0\"\n"
"PRETTY_NAME=\"Red Hat Enterprise Linux Workstation 7.0 (Codename)\"\n"
"ANSI_COLOR=\"0;31\"\n"
"CPE_NAME=\"cpe:/o:redhat:enterprise_linux:7.0:beta:workstation\"\n"
"\n"
"REDHAT_BUGZILLA_PRODUCT=\"Red Hat Enterprise Linux 7\"\n"
"REDHAT_BUGZILLA_PRODUCT_VERSION=7.0\n"
"REDHAT_SUPPORT_PRODUCT=\"Red Hat Enterprise Linux\"\n"
"REDHAT_SUPPORT_PRODUCT_VERSION=7.0\n";

    check(f19, "fedora", "19");
    check(raw, "fedora", "rawhide");
    check(el7, "rhel", "7.0");

    return 0;
}
]])
